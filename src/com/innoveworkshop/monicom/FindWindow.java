/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.innoveworkshop.monicom;

import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.JTextArea;

/**
 *
 * @author nathanpc
 */
public class FindWindow extends javax.swing.JFrame {
    private String needle;
    private List<int[]> found;
    private int curr_index;
    private JTextArea field;
    
    /**
     * Creates new form FindWindow
     */
    public FindWindow(JTextArea field) {
        initComponents();
        
        this.found = new ArrayList();
        this.needle = "";
        this.curr_index = 0;
        this.field = field;
    }
    
    /**
     * Populates the found list.
     * 
     * @param haystack Text to perform the search on.
     */
    private void populateFoundList(String haystack) {
        int last_found = -1;
        found.clear();
        
        while (haystack.indexOf(needle, last_found + 1) >= 0) {
            last_found = haystack.indexOf(needle, last_found + 1);
            
            int indexes[] = { last_found, last_found + needle.length() };
            found.add(indexes);
            System.out.println("Found: " + indexes[0] + " - " + indexes[1]);
        }
    }
    
    /**
     * Performs a search action.
     */
    private void performSearch() {
        String text = txtSearch.getText();
        String haystack = field.getText();
        
        // Is this case sensitive?
        if (!chkMatchCase.isSelected()) {
            text = text.toLowerCase();
            haystack = haystack.toLowerCase();
        }
        
        // Check if it is a new string that the user is searching for.
        if (!text.equals(needle)) {
            needle = text;
            curr_index = 0;
        }
        
        // Grab the list of places where we found it.
        populateFoundList(haystack);
        
        // Nothing was found.
        if (found.isEmpty()) {
            Debug.println("FINDING", "No occurrences of " + needle + " found.");
            JOptionPane.showMessageDialog(null, "No occurrences of " + needle + " found.",
                    "Nothing found", JOptionPane.INFORMATION_MESSAGE);
            
            return;
        }
        
        // Loop back the indexes if we have reached the end.
        if (curr_index == found.size()) {
            curr_index = 0;
        }
        
        // Go through the findings one at a time.
        int indexes[] = found.get(curr_index);
        field.select(indexes[0], indexes[1]);
        curr_index++;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblWhat = new javax.swing.JLabel();
        txtSearch = new javax.swing.JTextField();
        btSearch = new javax.swing.JButton();
        btCancel = new javax.swing.JButton();
        chkMatchCase = new javax.swing.JCheckBox();

        setTitle("Find");

        lblWhat.setText("Find What: ");

        txtSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSearchActionPerformed(evt);
            }
        });

        btSearch.setText("  Search  ");
        btSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btSearchActionPerformed(evt);
            }
        });

        btCancel.setText("  Cancel  ");
        btCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btCancelActionPerformed(evt);
            }
        });

        chkMatchCase.setText("Match Case");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblWhat)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 323, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(chkMatchCase)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btCancel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btSearch)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtSearch, javax.swing.GroupLayout.DEFAULT_SIZE, 25, Short.MAX_VALUE)
                    .addComponent(lblWhat))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btSearch)
                    .addComponent(btCancel)
                    .addComponent(chkMatchCase))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btCancelActionPerformed
        this.setVisible(false);
    }//GEN-LAST:event_btCancelActionPerformed

    private void btSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btSearchActionPerformed
        performSearch();
    }//GEN-LAST:event_btSearchActionPerformed

    private void txtSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSearchActionPerformed
        performSearch();
    }//GEN-LAST:event_txtSearchActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btCancel;
    private javax.swing.JButton btSearch;
    private javax.swing.JCheckBox chkMatchCase;
    private javax.swing.JLabel lblWhat;
    private javax.swing.JTextField txtSearch;
    // End of variables declaration//GEN-END:variables
}
